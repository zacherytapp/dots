{

    "System.debug": {
        "prefix": "debug",
        "body": [
            "System.debug('*** $1: ' + $1);"
        ],
        "description": "Log output to console"
    },

    "Apex method - public static void": {
        "prefix": "psv, public",
        "body": [
            "public static void ${1:(methodName)}(${2:(inputParams)}){",
                "",
                "}"
        ],
        "description": "Apex method - public static void"
    },

    "Apex method description - short": {
        "prefix": "description",
        "body": [
            "/**",
            "* @description $1",
            "*/"
        ],
        "description": "Default short description for Apex methods"
    },

    "Apex method description - full": {
        "prefix": "description",
        "body": [
            "/**",
            "* @description $1",
            "* @param ",
            "* @return ",
            "*/"
        ],
        "description": "Default short description for Apex methods"
    },

    "Apex MIT header": {
        "prefix": "header - MIT",
        "body": [
            "/**",
            "* MIT License",
            "* ",
            "* Copyright (c) 2012-2022 Scott Chacon and others",
            "* ",
            "* Permission is hereby granted, free of charge, to any person obtaining",
            "* a copy of this software and associated documentation files (the",
            "* \"Software\"), to deal in the Software without restriction, including",
            "* without limitation the rights to use, copy, modify, merge, publish,",
            "* distribute, sublicense, and/or sell copjies of the Software, and to",
            "* permit persons to whom the Software is furnished to do so, subject to",
            "* the following conditions:",
            "* ",
            "* The above copyright notice and this permission notice shall be",
            "* included in all copies or substantial portions of the Software.",
            "* ",
            "* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,",
            "* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
            "* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND",
            "* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE",
            "* LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION",
            "* OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",
            "* WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
            "* ",
            "* @description $1",
            "* @author Zakk Tapp, Craftsman Technology Group",
            "* @group $2",
            "* @created ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
            "* ",
            "*/"
        ],
        "header-mit": "Default header for classes with license"
    },

    "Apex description - header": {
        "prefix": "header",
        "body": [
            "/**",
            "* @description $1",
            "* @author Zakk Tapp, Craftsman Technology Group",
            "* @group $2",
            "* @created ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
            "*/"
        ],
        "header": "Default header for classes"
    },


    "List - Collection": {
        "prefix": "List - Collection",
        "body": [
            "List<${1:(typeName)}> ${2:(listName)} = new List<${1:(typeName)}>()"
        ],
        "description": ""
    },

    "Apex parameter" : {
        "prefix": "parameter - description",
        "body": [
            "* @param $1"
        ],
        "description": "Parameter for descriptions"
    },

    "Apex return description" : {
        "prefix": "return - description",
        "body": [
            "* @return $1"
        ],
        "description": "Expected return value"
    },

    "Apex Error Log - General": {
        "prefix": "apexErrorLog_General",
        "body": [
            "new ApexDebugLogHelper().createLog(",
                "new ApexDebugLogHelper.ErrorGeneral('${1:(className)}', '${2:(methodName)}',",
                    " ${3:(recordId/data)}, '${4:(errorMsg)}')",
                    ");"
        ],
        "description": "Snippet to create a general error Apex Debug Log record"
    },

    "Apex Error Log - Catch Block": {
        "prefix": "apexErrorLog_Catch",
        "body": [
            "new ApexDebugLogHelper().createLog(",
                "new ApexDebugLogHelper.Error('${1:(className)}', '${2:(methodName)}',",
                    " ${3:(recordId/data)}, ${4:(exceptionVariable)})",
                    ");"
        ],
        "description": "Snippet to create an error Apex Debug Log record from catch block"
    }
}
