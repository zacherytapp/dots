#!/bin/bash

# Get the current pane Ids from given pane names
pane_names=("test" "deploy")
for pane_name in "${pane_names[@]}";
do
  pane_ids=$(tmux list-panes -a -F "#{pane_title}:#{pane_id}" | grep "^${pane_name}:" | cut -d':' -f2)
  echo "pane_ids: $pane_ids"
  for pane_id in $pane_ids;
  do
    tmux kill-pane -t "$pane_id"
    echo "Closed pane with name: $pane_name"
  done
done


# Get the current window Id from the window name
window_name="logs"
window_id=$(tmux list-windows -t "$current_session" -F "#{window_name}:#{window_id}" | grep "^${window_name}:" | cut -d':' -f2)
if [ -n "$window_id" ]; then
  tmux kill-window -t "$window_id"
  echo "Closed window with name: $window_name"
fi

# Check if the current directory contains a Salesforce project
if [ -f "sfdx-project.json" ] && pgrep tmux > /dev/null; then
  # Rename a new tmux session named 'sf'
  current_session=$(tmux display-message -p '#S')
  tmux rename-session -t "$current_session" "sf"

  tmux rename-window "editor"

  tmux select-pane -T 'code'
  # Split the window horizontally and rename the new pane 'deployments'
  tmux splitw -hl '35%'\; select-pane -T 'test'\; last-pane

  # Split the first pane vertically and rename the new pane 'tests'
  tmux splitw -fl '15%'\; select-pane -T 'deploy'\; last-pane

  # Create a new window named 'logs'
  tmux neww -n 'logs'\; select-pane -T 'logs'\; last-window
else
  echo "sfdx-project.json not found in the current directory."
fi
